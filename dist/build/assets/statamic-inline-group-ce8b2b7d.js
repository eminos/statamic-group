function _(s,e,t,a,o,r,c,g){var i=typeof s=="function"?s.options:s;e&&(i.render=e,i.staticRenderFns=t,i._compiled=!0),a&&(i.functional=!0),r&&(i._scopeId="data-v-"+r);var l;if(c?(l=function(n){n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,!n&&typeof __VUE_SSR_CONTEXT__<"u"&&(n=__VUE_SSR_CONTEXT__),o&&o.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(c)},i._ssrRegister=l):o&&(l=g?function(){o.call(this,(i.functional?this.parent:this).$root.$options.shadowRoot)}:o),l)if(i.functional){i._injectStyles=l;var p=i.render;i.render=function(u,f){return l.call(f),p(u,f)}}else{var d=i.beforeCreate;i.beforeCreate=d?[].concat(d,l):[l]}return{exports:s,options:i}}const h={mixins:[Fieldtype],data(){return{toggle:!1}},watch:{toggle(){this.config.save_toggle_state&&this.update(this.toggle)}},computed:{showFields(){return!this.config.toggle_controls_visibility||this.config.toggle_controls_visibility&&this.toggle}},mounted(){this.config.save_toggle_state&&(this.toggle=this.value);let s=this.$el.closest(".publish-field"),e=[];for(;s.nextElementSibling&&!s.nextElementSibling.classList.contains("inline_group-fieldtype");)e.push(s.nextElementSibling),s=s.nextElementSibling;this.$nextTick(()=>{e.forEach(t=>{this.$el.querySelector(".publish-fields").appendChild(t)})})}};var v=function(){var e=this,t=e._self._c;return t("div",[e.config.show_header?t("div",{staticClass:"form-group section-fieldtype w-full",class:{active:e.showFields}},[t("div",{staticClass:"flex grp-justify-between grp-items-center"},[t("div",{staticClass:"field-inner"},[t("label",{staticClass:"publish-field-label"},[t("span",{directives:[{name:"tooltip",rawName:"v-tooltip",value:{content:e.config.handle,delay:300,autoHide:!1},expression:"{content: config.handle, delay: 300, autoHide: false}"}],domProps:{textContent:e._s(e.config.display)}})]),e.config.instructions?t("div",{staticClass:"help-block -mt-2",domProps:{innerHTML:e._s(e.$options.filters.markdown(e.config.instructions))}}):e._e()]),e.config.show_toggle?t("div",{staticClass:"toggle-fieldtype-wrapper grp-mt-2"},[t("toggle-input",{model:{value:e.toggle,callback:function(a){e.toggle=a},expression:"toggle"}})],1):e._e()])]):e._e(),t("div",{directives:[{name:"show",rawName:"v-show",value:e.showFields,expression:"showFields"}],staticClass:"publish-fields w-full"})])},m=[],C=_(h,v,m,!1,null,null,null,null);const b=C.exports,w={mixins:[IndexFieldtype]};var y=function(){var e=this,t=e._self._c;return t("div",{staticClass:"flex items-center"},[this.value?t("svg-icon",{staticClass:"w-3 text-green-600",attrs:{name:"light/check"}}):e._e(),this.value?e._e():t("svg-icon",{staticClass:"w-3 text-gray-500",attrs:{name:"light/close"}})],1)},$=[],x=_(w,y,$,!1,null,null,null,null);const F=x.exports;Statamic.booting(()=>{Statamic.$components.register("inline_group-fieldtype",b),Statamic.$components.register("inline_group-fieldtype-index",F)});
